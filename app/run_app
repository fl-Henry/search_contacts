#!/bin/bash
# run_app

# Exit with waiting for type <enter> before exit
err_exit(){
#  echo '[ERROR]'
#  printf "%s " "Press enter to continue"
#  read -r
  exit "$1"
}

# Kill all jobs (processes)
kill_all(){
  docker compose down
  kill `jobs -p` >/dev/null 2>&1  || err_exit $?
}

# Get the option
while [ "$#" -gt 0 ]
do
   case "$1" in

     -h|--help)
      help="--help"
      str_param+="$help "
      printf "%s " " $help';"
      ;;

   -*)
      echo "Invalid option '$1'. Use -h or --help to see the valid options" >&2
      err_exit 1
      ;;

   *)
      echo "Invalid option '$1'. Use -h or --help to see the valid options" >&2
      err_exit 1
   ;;
   esac
   shift
done
echo

echo "start_dir: $(pwd)"
start_dir=$(pwd)

echo "base_dir: $(dirname "$0")"
base_dir=$(dirname "$0")
if [ "$base_dir" != "." ]; then
  echo "Changing directory to: $base_dir"
  cd "$base_dir" || err_exit $?
  echo "pwd: $(pwd)"
fi

echo "Venv activating:"
source ../venv/bin/activate || err_exit $?
echo "Venv activated successful"

# Start app // entrypoint
printf "\n\033[93m%s\033[0m\n" "< Start app"
cd ./src || err_exit $?
python ./run_app.py # &

#python ./app.py
cd .. || err_exit $?
printf "\n\033[93m%s\033[0m\n" "< Close app"

kill_all

echo "Changing directory to: $start_dir"
cd "$start_dir" || err_exit $?
echo "pwd: $(pwd)"

deactivate